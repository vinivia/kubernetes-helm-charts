{{- if and .Values.ingressExtra.enabled .Values.service.enabled ( eq .Values.service.type "ClusterIP") -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "k8s-common.names.fullname" . }}-extra
  namespace: {{ .Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" . | nindent 4 }}
  annotations:
  {{- include "k8s-common.ingressExtra.annotations" . | nindent 4 }}
  {{- if .Values.ingressExtra.annotations }}
  {{- include "k8s-common.tplvalues.render" ( dict "value" .Values.ingressExtra.annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  rules:
    {{ range (required "ingressExtra.extraHosts are required for ingressExtra" .Values.ingressExtra.extraHosts) -}}
    {{- $portName := default "http" .port -}}
    - host: {{ required "A valid ingressExtra.extraHosts.host entry required!" .host | quote }}
      http:
        paths:
          {{ if .paths -}}
          {{ range .paths -}}
          - path: {{ . }}
            pathType: {{ $.Values.ingressExtra.pathType }}
            backend: {{- include "k8s-common.ingress.backend" (dict "serviceName" (include "k8s-common.ingress.serviceName" $) "servicePort" $portName "context" $)  | nindent 14 }}
          {{ end -}}
          {{ else -}}
          - path: "/"
            pathType: "Prefix"
            backend: {{- include "k8s-common.ingress.backend" (dict "serviceName" "ssl-redirect" "servicePort" "use-annotation" "context" $)  | nindent 14 }}
          {{ end -}}
  {{ end -}}
{{- end }}
