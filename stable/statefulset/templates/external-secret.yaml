{{ if .Values.env.vaultSecret }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "k8s-common.names.fullname" . }}-vault
  namespace: {{ .Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" . | nindent 4 }}
spec:
  secretStoreRef:
    name: default
    kind: ClusterSecretStore
  refreshInterval: "3m"
  target:
    name: {{ include "k8s-common.names.fullname" . }}-vault
    template:
      metadata:
        annotations:
          external-secret: "true"
  data:
  {{- $allVaultSecrets := default (dict) .Values.env.vaultSecret -}}
  {{- range $key, $value := $allVaultSecrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ if $value.fullPath -}}
          {{- $value.fullPath -}}
        {{- else -}}
          secret-{{ $.Values.global.product }}/data/
          {{- $.Values.global.environment -}}
          /k8s/{{ $value.path }}
        {{- end }}
        property: {{ default $key $value.secret }}
  {{ end -}}
{{ end -}}

{{- range (concat .Values.sidecarContainers .Values.initContainers ) }}
{{- $values := dict "Values" . "Release" $.Release "Template" $.Template -}}
{{ if and (hasKey $values.Values "env") (hasKey $values.Values.env "vaultSecret") }}
{{ $name := default $.Release.Name $values.Values.global.serviceName }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "k8s-common.names.fullname" $values }}-vault
  namespace: {{ $.Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" $ | nindent 4 }}
spec:
  secretStoreRef:
    name: default
    kind: ClusterSecretStore
  refreshInterval: "3m"
  target:
    name: {{ include "k8s-common.names.fullname" $values }}-vault
    template:
      metadata:
        annotations:
          external-secret: "true"
  data:
  {{- $allVaultSecrets := default (dict) $values.Values.env.vaultSecret -}}
  {{- range $key, $value := $allVaultSecrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ if $value.fullPath -}}
          {{- $value.fullPath -}}
          {{- else -}}
          secret-{{ $.Values.global.product }}/data/
          {{- $.Values.global.environment -}}
          /k8s/{{ $value.path }}
        {{- end }}
        property: {{ default $key $value.secret }}
  {{ end -}}
{{ end -}}
{{ end -}}

{{- if .Values.vaultVolumesSupport -}}
{{- $allVolumes := default (dict) .Values.volumes -}}
{{- range $key, $value := $allVolumes }}
{{- if $value.vaultPath -}}
{{- $vaultPath := $value.vaultPath }}
{{- $items := default (list) $value.items }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "k8s-common.names.fullname" $ }}-vault-{{ $key }}
  namespace: {{ $.Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" $ | nindent 4 }}
spec:
  secretStoreRef:
    name: default
    kind: ClusterSecretStore
  refreshInterval: "3m"
  target:
    name: {{ include "k8s-common.names.fullname" $ }}-vault-{{ $key }}
    template:
      metadata:
        annotations:
          external-secret: "true"
  data:
    {{- range $items }}
    - secretKey: {{ . }}
      remoteRef:
        key: secret-{{ $.Values.global.product }}/data/
          {{- $.Values.global.environment -}}
          /k8s/{{ $vaultPath }}
        property: {{ . }}
    {{ end -}}
{{ end -}}
{{ end -}}
{{- end -}}
